// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using instapostDataLayer;

#nullable disable

namespace instapostDatalayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryEntityPostEntity", b =>
                {
                    b.Property<long>("postCategoryid")
                        .HasColumnType("bigint");

                    b.Property<long>("postsid")
                        .HasColumnType("bigint");

                    b.HasKey("postCategoryid", "postsid");

                    b.HasIndex("postsid");

                    b.ToTable("CategoryEntityPostEntity");
                });

            modelBuilder.Entity("CategoryEntityUserEntity", b =>
                {
                    b.Property<long>("userInterestInCategoryid")
                        .HasColumnType("bigint");

                    b.Property<long>("usersid")
                        .HasColumnType("bigint");

                    b.HasKey("userInterestInCategoryid", "usersid");

                    b.HasIndex("usersid");

                    b.ToTable("CategoryEntityUserEntity");
                });

            modelBuilder.Entity("instapostEntitylayer.CategoryEntity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("CategoryDb");
                });

            modelBuilder.Entity("instapostEntitylayer.PostEntity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long?>("UserEntityid")
                        .HasColumnType("bigint");

                    b.Property<string>("postDesc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("UserEntityid");

                    b.ToTable("PostDb");
                });

            modelBuilder.Entity("instapostEntitylayer.UserEntity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("UsersDb");
                });

            modelBuilder.Entity("CategoryEntityPostEntity", b =>
                {
                    b.HasOne("instapostEntitylayer.CategoryEntity", null)
                        .WithMany()
                        .HasForeignKey("postCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("instapostEntitylayer.PostEntity", null)
                        .WithMany()
                        .HasForeignKey("postsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryEntityUserEntity", b =>
                {
                    b.HasOne("instapostEntitylayer.CategoryEntity", null)
                        .WithMany()
                        .HasForeignKey("userInterestInCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("instapostEntitylayer.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("usersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("instapostEntitylayer.PostEntity", b =>
                {
                    b.HasOne("instapostEntitylayer.UserEntity", null)
                        .WithMany("posts")
                        .HasForeignKey("UserEntityid");
                });

            modelBuilder.Entity("instapostEntitylayer.UserEntity", b =>
                {
                    b.Navigation("posts");
                });
#pragma warning restore 612, 618
        }
    }
}
